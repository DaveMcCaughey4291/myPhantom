{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Uncategorized",
    "coa": {
        "data": {
            "description": "",
            "edges": [
                {
                    "id": "port_0_to_port_2",
                    "sourceNode": "0",
                    "sourcePort": "0_out",
                    "targetNode": "2",
                    "targetPort": "2_in"
                },
                {
                    "id": "port_2_to_port_3",
                    "sourceNode": "2",
                    "sourcePort": "2_out",
                    "targetNode": "3",
                    "targetPort": "3_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_3_to_port_8",
                    "sourceNode": "3",
                    "sourcePort": "3_out",
                    "targetNode": "8",
                    "targetPort": "8_in"
                },
                {
                    "id": "port_8_to_port_1",
                    "sourceNode": "8",
                    "sourcePort": "8_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_3_to_port_10",
                    "sourceNode": "3",
                    "sourcePort": "3_out",
                    "targetNode": "10",
                    "targetPort": "10_in"
                }
            ],
            "hash": "262c46e368d920e242687125254f2dbe44bf0ba1",
            "nodes": {
                "0": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_start",
                        "id": "0",
                        "type": "start"
                    },
                    "errors": {},
                    "id": "0",
                    "type": "start",
                    "x": 190,
                    "y": 0
                },
                "1": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "on_finish",
                        "id": "1",
                        "type": "end"
                    },
                    "errors": {},
                    "id": "1",
                    "type": "end",
                    "userCode": "\n    # This function is called after all actions are completed.\n    # summary of all the action and/or all details of actions\n    # can be collected here.\n\n    # summary_json = phantom.get_summary()\n    # if 'result' in summary_json:\n        # for action_result in summary_json['result']:\n            # if 'action_run_id' in action_result:\n                # action_results = phantom.get_action_results(action_run_id=action_result['action_run_id'], result_data=False, flatten=False)\n                # phantom.debug(action_results)\n\n",
                    "x": 190,
                    "y": 788
                },
                "10": {
                    "data": {
                        "advanced": {
                            "customName": "Run playbook",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "run_playbook",
                        "id": "10",
                        "inputParameters": [
                            "get_custom_list_copy_1:custom_function_result.data.list_of_items"
                        ],
                        "outputVariables": [
                            "status",
                            "message"
                        ],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "10",
                    "type": "code",
                    "userCode": "\n    # Setup variables\n    num_success = 0\n    num_failed = 0\n    \n    phantom.debug(f'Inputs: {get_custom_list_copy_1_data_list_of_items}')\n    \n    for item in get_custom_list_copy_1_data_list_of_items[0]:\n        container = phantom.get_container(item)\n        phantom.debug(f'Found container: {container}')\n        success, message, run_id = phantom.playbook(playbook='myPhantom/[Quick Close] No Threat', container=container)\n        if success:\n            num_success += 1\n            phantom.debug(f'Successfully ran playbook on container with run id: {run_id}')\n        else:\n            phantom.debug(f'Failed to run playbook.  Message from Phantom: {message}')\n            num_failed += 1\n            \n    if num_failed > 0:\n        message = f'One or more playbook executions failed to run. Success: {num_success} Failed: {num_failed}'\n        status = 'failure'\n    else:\n        message = f'Successfully ran playbook on {num_success} containers.'\n        status = 'success'\n    outputs = {\n        \"status\": status,\n        \"message\": message\n    }\n\n",
                    "x": 340,
                    "y": 476
                },
                "2": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "get_custom_list_copy",
                            "repoName": "myPhantom"
                        },
                        "functionId": 1,
                        "functionName": "get_custom_list_copy_1",
                        "id": "2",
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "get_custom_list_copy": {
                                "description": "This custom function retrieves the elements of a custom list.",
                                "fields": [
                                    {
                                        "dataTypes": [],
                                        "description": "Name of the custom list",
                                        "inputType": "list",
                                        "label": "list_name",
                                        "name": "list_name",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "get_custom_list_copy",
                                "name": "get_custom_list_copy"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "get_custom_list_copy": {
                                "list_name": "test_list"
                            }
                        }
                    },
                    "errors": {},
                    "id": "2",
                    "type": "utility",
                    "x": 170,
                    "y": 148
                },
                "3": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "get_custom_list_copy_1:custom_function_result.data.status",
                                        "value": "success"
                                    }
                                ],
                                "conditionIndex": 0,
                                "customName": "success",
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "customName": "failure",
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 1,
                        "functionName": "decision_1",
                        "id": "3",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "3",
                    "type": "decision",
                    "x": 250,
                    "y": 296
                },
                "8": {
                    "data": {
                        "advanced": {
                            "customName": "custom function failed comment",
                            "customNameId": 0,
                            "join": []
                        },
                        "customFunction": null,
                        "functionId": 2,
                        "functionName": "custom_function_failed_comment",
                        "id": "8",
                        "selectMore": false,
                        "tab": "apis",
                        "type": "utility",
                        "utilities": {
                            "comment": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "comment",
                                        "name": "comment",
                                        "placeholder": "Enter a comment",
                                        "renderType": "datapath",
                                        "required": true
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add comment",
                                "name": "comment"
                            }
                        },
                        "utilityType": "api",
                        "values": {
                            "comment": {
                                "_internal": [
                                    "container",
                                    "author",
                                    "trace"
                                ],
                                "comment": "The retrieve custom list data custom function has failed."
                            }
                        }
                    },
                    "errors": {},
                    "id": "8",
                    "type": "utility",
                    "x": 0,
                    "y": 624
                }
            },
            "notes": ""
        },
        "input_spec": null,
        "output_spec": null,
        "playbook_type": "automation",
        "python_version": "3",
        "schema": "5.0.6",
        "version": "5.3.1.84890"
    },
    "create_time": "2022-04-29T15:33:02.633628+00:00",
    "draft_mode": false,
    "labels": [
        "*"
    ],
    "tags": []
}