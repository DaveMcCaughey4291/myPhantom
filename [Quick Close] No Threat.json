{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Uncategorized",
    "coa": {
        "data": {
            "description": "",
            "edges": [
                {
                    "id": "port_0_to_port_2",
                    "sourceNode": "0",
                    "sourcePort": "0_out",
                    "targetNode": "2",
                    "targetPort": "2_in"
                },
                {
                    "id": "port_2_to_port_3",
                    "sourceNode": "2",
                    "sourcePort": "2_out",
                    "targetNode": "3",
                    "targetPort": "3_in"
                },
                {
                    "id": "port_3_to_port_1",
                    "sourceNode": "3",
                    "sourcePort": "3_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                }
            ],
            "hash": "3a434077a5c61b9dbc01029b3e1542b2f1d4641f",
            "nodes": {
                "0": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_start",
                        "id": "0",
                        "type": "start"
                    },
                    "errors": {},
                    "id": "0",
                    "type": "start",
                    "x": 19.999999999999986,
                    "y": -6.394884621840902e-14
                },
                "1": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "on_finish",
                        "id": "1",
                        "type": "end"
                    },
                    "errors": {},
                    "id": "1",
                    "type": "end",
                    "userCode": "\n    # This function is called after all actions are completed.\n    # summary of all the action and/or all details of actions\n    # can be collected here.\n\n    # summary_json = phantom.get_summary()\n    # if 'result' in summary_json:\n        # for action_result in summary_json['result']:\n            # if 'action_run_id' in action_result:\n                # action_results = phantom.get_action_results(action_run_id=action_result['action_run_id'], result_data=False, flatten=False)\n                # phantom.debug(action_results)\n\n",
                    "x": 20,
                    "y": 440
                },
                "2": {
                    "data": {
                        "advanced": {
                            "join": [],
                            "refreshNotableData": true
                        },
                        "functionId": 1,
                        "functionName": "add_comment_set_status_1",
                        "id": "2",
                        "selectMore": false,
                        "tab": "apis",
                        "type": "utility",
                        "utilities": {
                            "comment": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "comment",
                                        "name": "comment",
                                        "placeholder": "Enter a comment",
                                        "renderType": "datapath",
                                        "required": true
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add comment",
                                "name": "comment"
                            },
                            "set_status": {
                                "description": "",
                                "fields": [
                                    {
                                        "choices": "notableStatus",
                                        "description": "",
                                        "label": "status",
                                        "name": "status",
                                        "placeholder": "Select status",
                                        "renderType": "dropdown",
                                        "required": true
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "set status",
                                "name": "set_status",
                                "refreshNotableData": true
                            }
                        },
                        "utilityType": "api",
                        "values": {
                            "comment": {
                                "_internal": [
                                    "container",
                                    "author",
                                    "trace"
                                ],
                                "comment": "Closing ticket as no threat found."
                            },
                            "set_status": {
                                "_internal": [
                                    "container",
                                    "trace"
                                ],
                                "status": "closed"
                            }
                        }
                    },
                    "errors": {},
                    "id": "2",
                    "type": "utility",
                    "x": 0,
                    "y": 148
                },
                "3": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "power_add_tag",
                            "repoName": "myPhantom"
                        },
                        "functionId": 2,
                        "functionName": "power_add_tag_2",
                        "id": "3",
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "power_add_tag": {
                                "description": "Allows adding multiple tags to a container or containers.  If no container(s) are provided then the current container is assumed.",
                                "fields": [
                                    {
                                        "dataTypes": [],
                                        "description": "A mandatory list of tag strings",
                                        "inputType": "list",
                                        "label": "tag_list",
                                        "name": "tag_list",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "phantom container id"
                                        ],
                                        "description": "An optional ID of another container",
                                        "inputType": "item",
                                        "label": "container_id",
                                        "name": "container_id",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "An optional list of container IDs",
                                        "inputType": "list",
                                        "label": "container_list",
                                        "name": "container_list",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "power_add_tag",
                                "name": "power_add_tag"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "power_add_tag": {
                                "container_id": null,
                                "container_list": null,
                                "tag_list": "[\"linux\",\"windows\"]"
                            }
                        }
                    },
                    "errors": {},
                    "id": "3",
                    "type": "utility",
                    "x": 0,
                    "y": 296
                }
            },
            "notes": ""
        },
        "input_spec": null,
        "output_spec": [
            {
                "contains": [],
                "datapaths": [],
                "deduplicate": false,
                "description": "",
                "metadata": {},
                "name": ""
            }
        ],
        "playbook_type": "automation",
        "python_version": "3",
        "schema": "5.0.6",
        "version": "5.3.1.84890"
    },
    "create_time": "2022-05-11T11:12:25.426007+00:00",
    "draft_mode": false,
    "labels": [
        "*"
    ],
    "tags": []
}